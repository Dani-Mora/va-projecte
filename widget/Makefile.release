#############################################################################
# Makefile for building: libglwidgetplugin.so
# Generated by qmake (2.01a) (Qt 4.7.4) on: Sun Nov 4 16:05:18 2012
# Project:  widget.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_PLUGIN -DQT_SCRIPT_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQDESIGNER_EXPORT_WIDGETS -DQT_SHARED
CFLAGS        = -m32 -pipe -O2 -D_REENTRANT -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -m32 -pipe -O2 -D_REENTRANT -Wall -W -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-32 -I. -I/usr/include/QtDesigner -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtOpenGL -I/usr/include/QtXml -I/usr/include/QtScript -I/usr/include -I/usr/X11R6/include -Irelease
LINK          = g++
LFLAGS        = -m32 -Wl,-O1 -shared
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -L. -lQtScript -L/usr/lib -lQtXml -lQtOpenGL -L/usr/X11R6/lib -lQtGui -lQtCore -lQtDesigner -lGLU -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = glwidgetplugin.cpp \
		glwidget.cpp \
		box.cpp \
		color.cpp \
		face.cpp \
		vertex.cpp \
		model.cpp \
		material.cpp \
		material_lib.cpp \
		objecte.cpp \
		scene.cpp \
		point.cpp \
		light.cpp \
		textfile.cpp release/moc_glwidgetplugin.cpp \
		release/moc_glwidget.cpp
OBJECTS       = release/glwidgetplugin.o \
		release/glwidget.o \
		release/box.o \
		release/color.o \
		release/face.o \
		release/vertex.o \
		release/model.o \
		release/material.o \
		release/material_lib.o \
		release/objecte.o \
		release/scene.o \
		release/point.o \
		release/light.o \
		release/textfile.o \
		release/moc_glwidgetplugin.o \
		release/moc_glwidget.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		glwidget.pri \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/debug_and_release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/build_pass.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/designer.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		widget.pro
QMAKE_TARGET  = glwidgetplugin
DESTDIR       = 
TARGET        = libglwidgetplugin.so
TARGETD       = libglwidgetplugin.so

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Release  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)



qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-32 CONFIG+=debug -o Makefile.Release widget.pro

dist: 
	@$(CHK_DIR_EXISTS) release/glwidgetplugin1.0.0 || $(MKDIR) release/glwidgetplugin1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) release/glwidgetplugin1.0.0/ && $(COPY_FILE) --parents glwidgetplugin.h glwidget.h box.h color.h face.h vertex.h model.h material.h objecte.h scene.h material_lib.h point.h light.h textfile.h release/glwidgetplugin1.0.0/ && $(COPY_FILE) --parents glwidgetplugin.cpp glwidget.cpp box.cpp color.cpp face.cpp vertex.cpp model.cpp material.cpp material_lib.cpp objecte.cpp scene.cpp point.cpp light.cpp textfile.cpp release/glwidgetplugin1.0.0/ && (cd `dirname release/glwidgetplugin1.0.0` && $(TAR) glwidgetplugin1.0.0.tar glwidgetplugin1.0.0 && $(COMPRESS) glwidgetplugin1.0.0.tar) && $(MOVE) `dirname release/glwidgetplugin1.0.0`/glwidgetplugin1.0.0.tar.gz . && $(DEL_FILE) -r release/glwidgetplugin1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Release


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_glwidgetplugin.cpp release/moc_glwidget.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release/moc_glwidgetplugin.cpp release/moc_glwidget.cpp
release/moc_glwidgetplugin.cpp: glwidgetplugin.h
	/usr/bin/moc $(DEFINES) $(INCPATH) glwidgetplugin.h -o release/moc_glwidgetplugin.cpp

release/moc_glwidget.cpp: point.h \
		scene.h \
		objecte.h \
		model.h \
		vertex.h \
		box.h \
		face.h \
		material_lib.h \
		material.h \
		color.h \
		light.h \
		lightform.h \
		glwidget.h
	/usr/bin/moc $(DEFINES) $(INCPATH) glwidget.h -o release/moc_glwidget.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

release/glwidgetplugin.o: glwidgetplugin.cpp glwidget.h \
		point.h \
		scene.h \
		objecte.h \
		model.h \
		vertex.h \
		box.h \
		face.h \
		material_lib.h \
		material.h \
		color.h \
		light.h \
		lightform.h \
		glwidgetplugin.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/glwidgetplugin.o glwidgetplugin.cpp

release/glwidget.o: glwidget.cpp glwidget.h \
		point.h \
		scene.h \
		objecte.h \
		model.h \
		vertex.h \
		box.h \
		face.h \
		material_lib.h \
		material.h \
		color.h \
		light.h \
		lightform.h \
		textfile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/glwidget.o glwidget.cpp

release/box.o: box.cpp box.h \
		point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/box.o box.cpp

release/color.o: color.cpp color.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/color.o color.cpp

release/face.o: face.cpp face.h \
		vertex.h \
		point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/face.o face.cpp

release/vertex.o: vertex.cpp vertex.h \
		point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/vertex.o vertex.cpp

release/model.o: model.cpp model.h \
		vertex.h \
		point.h \
		box.h \
		face.h \
		material_lib.h \
		material.h \
		color.h \
		scene.h \
		objecte.h \
		light.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/model.o model.cpp

release/material.o: material.cpp material.h \
		color.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/material.o material.cpp

release/material_lib.o: material_lib.cpp material_lib.h \
		material.h \
		color.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/material_lib.o material_lib.cpp

release/objecte.o: objecte.cpp objecte.h \
		point.h \
		model.h \
		vertex.h \
		box.h \
		face.h \
		material_lib.h \
		material.h \
		color.h \
		scene.h \
		light.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objecte.o objecte.cpp

release/scene.o: scene.cpp scene.h \
		objecte.h \
		point.h \
		model.h \
		vertex.h \
		box.h \
		face.h \
		material_lib.h \
		material.h \
		color.h \
		light.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/scene.o scene.cpp

release/point.o: point.cpp point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/point.o point.cpp

release/light.o: light.cpp light.h \
		point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/light.o light.cpp

release/textfile.o: textfile.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/textfile.o textfile.cpp

release/moc_glwidgetplugin.o: release/moc_glwidgetplugin.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_glwidgetplugin.o release/moc_glwidgetplugin.cpp

release/moc_glwidget.o: release/moc_glwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_glwidget.o release/moc_glwidget.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/home2/users/alumnes/1125564/.designer/plugins/designer/ || $(MKDIR) $(INSTALL_ROOT)/home2/users/alumnes/1125564/.designer/plugins/designer/ 
	-$(INSTALL_PROGRAM) "$(TARGET)" "$(INSTALL_ROOT)/home2/users/alumnes/1125564/.designer/plugins/designer/$(TARGET)"
	-$(STRIP) --strip-unneeded "$(INSTALL_ROOT)/home2/users/alumnes/1125564/.designer/plugins/designer/$(TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/home2/users/alumnes/1125564/.designer/plugins/designer/$(TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/home2/users/alumnes/1125564/.designer/plugins/designer/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

